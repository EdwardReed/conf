set -g default-command "$SHELL --login"
# set-option -g default-shell "$SHELL -l"

set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
#set -g prefix C-a
#bind-key a send-prefix # for nested tmux sessions

set -g escape-time 1

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# colors
setw -g mode-bg black
#"xterm-256color" # "screen-256color"
set-option -g default-terminal "screen-256color" 

set-option -g pane-active-border-fg red

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename

# Resize Pane
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5

set -g mode-mouse off
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# vi movement keys
set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=white]» #[fg=red,bold]#T#[default]'
set-option -g status-right '#[fg=red][[ #(git branch) branch ]] #[fg=white]»» #[fg=white,bold]###S #[fg=red]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window num
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key '-' split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window


# focus on first window
# select-window -t 0
